input:not([type='checkbox']) {
    padding: 10px;
    padding-left: 110px;
    border-radius: 27px;
    border: 1px solid black;
    width: 70%;
    outline: transparent;
    font-size: 1.1em;
}

input:not([type='checkbox']):focus {
    outline: none;
    border: 1px solid #9c4dcc;
}

input:not([type='checkbox']).ng-invalid {
    border: 1px solid red;
    color: red !important;
}

input:not([type='checkbox']).ng-valid {
    color: green !important;
}

label + input:not([type='checkbox']).ng-invalid {
    color: red;
}

label + input:not([type='checkbox']):focus {
    color: #9c4dcd;
}

label {
    position: relative;
    left: 20px;
    top: 32px;
    color: dimgray;
}

input + label {
    position: inherit;
}

label input {
    display: none; /* <-- hide the default checkbox */
}

label span { /* <-- style the artificial checkbox */
    height: 10px;
    width: 10px;
    border: 1px solid grey;
    display: inline-block;
    position: relative;
}

[type=checkbox]:checked + span:before { /* <-- style its checked state..with a ticked icon */
    content: '\2714';
    position: absolute;
    top: -5px;
    left: 0;
}

.avatarLogin {
    font-size: 5em;
}

.avatarLogin span {
    border: 2px solid;
    border-radius: 100px;
    padding: 15px 25px;
}

.loginButton {
    margin: 5px;
    width: 100%;
}

.loginButton button {
    padding: 15px;
    border: 1px solid;
    border-radius: 25px;
    width: 100%;
    background: #9c4dcd;
    color: white;
    font-size: 1.1em;
    outline: none;
}

.loginButton button:hover {
    background: white;
    color: #9c4dcd;
    cursor: pointer;
}

.loginButton button:focus {
    outline: none;
}

.loginButton button:active {
    box-shadow: inset 0px -3px #453446;
}
.loginButton button:disabled,
.loginButton button[disabled]{
  border: 1px solid #999999;
  background-color: #cccccc;
  color: #666666;
}
.custom-checkbox {
    position: relative;
    margin: 10px;
}
.custom-checkbox input{
    position: absolute;
    left: 0;
    top: 0;
    height:15px;
    width: 50px;    /* Expand the checkbox so that it covers */
    z-index : 1;    /* the label and span, increase z-index to bring it over */
    opacity: 0;     /* the label and set opacity to 0 to hide it. */
}
.custom-checkbox input+label {
    position: relative;
    left: 0;
    top: 0;
    padding-left: 25px;
    color: black;
}
.custom-checkbox input+label span {
    position: absolute;  /* a small box to display as checkbox */
    left: 0;
    top: 0;
    height: 15px;
    width: 15px;
    border-radius: 2px;
    border: 1px solid black;
    background-color: white;
}
.custom-checkbox input:checked+label { /* change label color when checked */
    color: green;
}
.custom-checkbox input:checked+label span{ /* change span box color when checked */
    background-color: green;
    border: 1px solid green;
}

input:not([type='checkbox']).ng-valid + .errorMessage,
input:not([type='checkbox']).ng-untouched + .errorMessage{
    display: none;
}
.errorMessage{
    color: red;
    margin-left: 20px;
    font-size: 0.8em;
    font-weight: 600;
}